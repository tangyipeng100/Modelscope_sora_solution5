{"text":"Q: ¿Convertir una fecha a timestamp? ¿Cómo puedo obtener en PHP una fecha en formato de timestamp?\n$fecha = \"2015-12-06\";\n\necho TIMESTAMP($fecha);\n\n\nA: Puedes usar una de las dos siguientes formas de obtener el timestamp:\n\nFORMA #1: Estilo estructurado\n\/\/ Usa el método strtotime()\n$timestamp = strtotime($fecha);\n\n\nFORMA #2: Estilo orientado a objetos\n\/\/ DateTime class.\n$date = new DateTime($fecha);\n$timestamp = $date->getTimestamp();\n\n\n\nNOTA ACERCA DEL RENDIMIENTO:\nEl estilo estructurado ( método strtotime() ) es más eficiente que el estilo orientado a objetos ( clase DateTime ).\n\n\nPuedes ver un interesante benckmark de estas dos formas de obtener el timestamp aquí:\n \n\n\nMi respuesta original: \n\nA: Si quieres guardar el texto en $fecha con formato de timestamp, utiliza la función strtotime(). Una vez que guardes en una variable el resultado de la función con tu fecha como parámetro, puedes manipularla como cualquier timestamp. Entonces para obtener tu variable fecha con formato de timestamp sería así:\n$fecha=\"2015-12-06\";\n$variableTimestamp=strtotime($fecha);\n\nUna vez convertida a $variableTimestamp, puedes manipularla como timestamp, como por ejemplo para cambiar el formato de impresión. Ejemplo:\necho date(\"d\/m\/Y\", $variableTimestamp);\n\/\/Resultado: 06\/12\/2015"}
{"text":"Q: ¿Dónde se encuentra el maven embebido de Netbeans 8.0.2? He estado trabajando con maven en el netbeans y me gustaría usar el maven que ya trae pero ahora desde la consola y no descargarlo de nuevo.\nAl abrir la configuración en vez de la ruta me dice maven embebido.\n¿Alguien sabe dónde lo puedo encontrar si tengo Netbeans 8.0.2?\nMi sistema operativo es Windows.\n\nA: Si buscas el archivo mvn.bat, lo encontrarás en la carpeta:\n%PROGRAMFILES%\\NetBeans 8.0.2\\java\\maven\\bin\\mvn.bat"}
{"text":"Q: Copiar el contenido de un elemento al portapapeles usando JavaScript ¿Cómo puedo copiar el contenido de un div (o de cualquier elemento) al portapapeles usando exclusivamente JavaScript\/jQuery sin necesidad de usar Flash?\nPor ejemplo, si tengo este código:\n\n\n<p id=\"mi_parrafo\">\n  Texto que quiero copiar\n<\/p>\n<button>Copiar al portapapeles<\/button>\n\n\n¿Qué debo hacer para que, después de pulsar el botón, cuando pulse Ctr + V se pegue el contenido dentro de la etiqueta marcada como #mi_parrafo?\n\nA: Hay al menos una manera de conseguir esto sin usar Flash: utilizando el comando copy. Ese comando copiará al portapapeles el texto que esté seleccionado en la página en el momento de ejecutarse.\nAsí se puede crear una pequeña función que:\n\n\n*\n\n*Cree un campo de texto temporal (que no será visible).\n\n*Asigne el contenido del elemento que se quiere copiar al valor del campo de texto.\n\n*Seleccione el contenido del campo de texto.\n\n*Ejecute el comando copy: document.execCommand(\"copy\").\n\n*Destruya\/Borre el campo temporal.\n\n\nEntonces el contenido del elemento seleccionado estará en el portapapeles. El código sería así:\nfunction copiarAlPortapapeles(id_elemento) {\n\n  \/\/ Crea un campo de texto \"oculto\"\n  var aux = document.createElement(\"input\");\n\n  \/\/ Asigna el contenido del elemento especificado al valor del campo\n  aux.setAttribute(\"value\", document.getElementById(id_elemento).innerHTML);\n\n  \/\/ Añade el campo a la página\n  document.body.appendChild(aux);\n\n  \/\/ Selecciona el contenido del campo\n  aux.select();\n\n  \/\/ Copia el texto seleccionado\n  document.execCommand(\"copy\");\n\n  \/\/ Elimina el campo de la página\n  document.body.removeChild(aux);\n\n}\n\nEl principal problema de esta solución es que no todos los navegadores soportan este comando, aunque sí que se puede utilizar en los principales a partir de:\n\n\n*Chrome 43\n\n*Internet Explorer 10\n\n*Firefox 41\n\nUna demo del código en funcionamiento:\n\n\nfunction copiarAlPortapapeles(id_elemento) {\n  var aux = document.createElement(\"input\");\n  aux.setAttribute(\"value\", document.getElementById(id_elemento).innerHTML);\n  document.body.appendChild(aux);\n  aux.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(aux);\n}\n<p id=\"p1\">P1: Soy el primer párrafo<\/p>\n<p id=\"p2\">P2: Soy el segundo párrafo<\/p>\n<button onclick=\"copiarAlPortapapeles('p1')\">Copiar P1<\/button>\n<button onclick=\"copiarAlPortapapeles('p2')\">Copiar P2<\/button>\n<br\/><br\/>\n<input type=\"text\" placeholder=\"Pega aquí para probar\" \/>\n\n\n\nTambién se puede crear una versión equivalente usando jQuery:\n\n\nfunction copyToClipboard(elemento) {\n  var $temp = $(\"<input>\")\n  $(\"body\").append($temp);\n  $temp.val($(elemento).text()).select();\n  document.execCommand(\"copy\");\n  $temp.remove();\n}\n<script src=\"\"><\/script>\n<p id=\"p1\">P1: Soy el primer párrafo<\/p>\n<p id=\"p2\">P2: Soy el segundo párrafo<\/p>\n<button onclick=\"copyToClipboard('#p1')\">Copiar P1<\/button>\n<button onclick=\"copyToClipboard('#p2')\">Copiar P2<\/button>\n<br\/>\n<br\/>\n<input type=\"text\" placeholder=\"Pega aquí para probar\" \/>\n\n\nQue funciona de manera similar al ejemplo anterior, aunque se han reportado algunos errores en Safari para Mac y Chrome 64-bit (ver los comentarios en en enlace de la fuente original para más datos).\n\nFuente: respuesta original en el sitio StackOverflow.\n\nAMPLIACIÓN: COPIAR MANTENIENDO LOS ESTILOS\nEn otra pregunta en StackOverflow en Español, un usuario comentaba que no se copiaba el formato\/estilos del texto. Esto se debe a que en el código de arriba usa input text para copiar el contenido del elemento, por lo que el código HTML se \"pierde\" (se interpreta de forma literal en lugar de como HTML). Si en lugar de usar un input usamos un div editable, el formato no se pierde y se puede copiar\/pegar con estilos:\n\n\nfunction ejecutar(idelemento){\n  var aux = document.createElement(\"div\");\n  aux.setAttribute(\"contentEditable\", true);\n  aux.innerHTML = document.getElementById(idelemento).innerHTML;\n  aux.setAttribute(\"onfocus\", \"document.execCommand('selectAll',false,null)\"); \n  document.body.appendChild(aux);\n  aux.focus();\n  document.execCommand(\"copy\");\n  document.body.removeChild(aux);\n}\n#destino {\n  ;\n  ;\n   solid #ccc;\n}\n<p id=\"demo\"><b>Caso con formato.<\/b><\/p>\n<button onclick=\"ejecutar('demo')\">Copiar<\/button> \n<br\/>\n<div id=\"destino\" contentEditable=\"true\">\n<\/div>\n\n\n\nA: Solo para complementar podrías echarle un ojo a la librería clipboard.js, la cual como @Alvaro menciona hace uso de execCommand por lo que según la página de la librería dice que funciona en Chrome 42+, Firefox 41+, IE 9+ y Opera 29+.\nPara Safari no funciona, pero al probarlo en un iPad te selecciona el texto del input al mismo tiempo que te muestra la opción nativa para copiarlo.\nLa diferencia está en la facilidad de uso, ya que con poco tiempo y esfuerzo logras copiar el contenido que quieres, el siguiente código copia el contenido de un input, pero también se puede copiar\/cortar el contenido de otro elemento (boton, div, etc).\n\n\nvar clipboard = new Clipboard('.btn');\n<script src=\"\"><\/script>\n<!-- Objetivo -->\n<input id=\"foo\" value=\"Texto a copiar\">\n\n<!-- Disparador -->\n<button class=\"btn\" data-clipboard-target=\"#foo\">\n  Copiar al portapapeles\n<\/button>\n\n\n\nA: va a ser el mismo que tiene el otro cuate de arriba pero en vez de un input un text area para que te respete el indentado si tuvieras mas de una linea\nfunction copiarAlPortapapeles(id_elemento) {\n\n  \/\/ Crea un campo de texto \"oculto\", este por un textarea\n\n  var aux = document.createElement(\"textarea\");\n\n  \/\/ Asigna el contenido del elemento especificado al valor del campo\n  \/\/ este para vaciar el contenido\n\n  aux.innerHTML = document.getElementById(id_elemento).innerHTML\n\n  \/\/ Añade el campo a la página\n  document.body.appendChild(aux);\n\n  \/\/ Selecciona el contenido del campo\n  aux.select();\n\n  \/\/ Copia el texto seleccionado\n  document.execCommand(\"copy\");\n\n  \/\/ Elimina el campo de la página\n  document.body.removeChild(aux);\n\n}"}
{"text":"Q: El depurador de Eclipse dejó de funcionar en un espacio de trabajo Tengo un servidor JBoss configurado en dos workspaces diferentes de eclipse con exactamente la misma configuración que consiste en \n\n\n*Argumentos de programa: --configuration=all --host=localhost -Djboss.server.base.url=\n\n*Argumentos de MV: \"-Dprogram.name=JBossTools: JBoss Enterprise Application Platform 5.1\" -server -Xms2g -Xmx3g - -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 \"-Djava.endorsed.dirs=C:\\jboss-eap-5.1\\jboss-as\\lib\\endorsed\"\n\nEn un workspace me hace el debug en el eclipse sin problemas, pero en el otro, se nota lentitud al cargar y siempre se apaga sin mandar ningún mensaje de error tras unos 10 minutos mostrando como último en el log:\n---------------------------------------------------------\nGMS: address is 127.0.0.1:55200 (cluster=DefaultPartition)\n---------------------------------------------------------\n17:55:53,235 INFO  [DefaultPartition] Number of cluster members: 1\n17:55:53,235 INFO  [DefaultPartition] Other members: 0\n17:55:53,641 INFO  [PlatformMBeanServerRegistration] JBossCache MBeans were successfully registered to the platform mbean server.\n17:55:56,449 INFO  [STDOUT] \n---------------------------------------------------------\nGMS: address is 127.0.0.1:55200 (cluster=DefaultPartition-HAPartitionCache)\n---------------------------------------------------------\n17:55:58,494 INFO  [RPCManagerImpl] Received new cluster view: [127.0.0.1:55200|0] [127.0.0.1:55200]\n17:55:58,495 INFO  [RPCManagerImpl] Cache local address is 127.0.0.1:55200\n17:55:58,542 INFO  [RPCManagerImpl] state was retrieved successfully (in 2.05 seconds)\n17:55:59,010 INFO  [ComponentRegistry] JBoss Cache version: JBossCache 'Malagueta' 3.2.8.GA_JBCACHE_1620\n17:55:59,010 INFO  [DefaultPartition] Fetching serviceState (will wait for 30000 milliseconds):\n17:56:00,351 INFO  [DefaultPartition] State could not be retrieved (we are the first member in group)\n17:56:04,129 INFO  [HANamingService] Started HAJNDI bootstrap; jnpPort=1100, backlog=50, bindAddress=localhost\/127.0.0.1\n17:56:04,302 INFO  [DetachedHANamingService$AutomaticDiscovery] Listening on localhost\/127.0.0.1:1102, group=230.0.0.4, HA-JNDI address=127.0.0.1:1100\n17:56:21,920 WARN  [JBossASSecurityMetadataStore] WARNING! POTENTIAL SECURITY RISK. It has been detected that the MessageSucker component which sucks messages from one node to another has not had its password changed from the installation default. Please see the JBoss Messaging user guide for instructions on how to do this.\n17:57:01,259 INFO  [UnifiedInvokerHA] Service name is \n17:57:32,764 INFO  [TransactionManagerService] JBossTS Transaction Service (JTA version - ) - JBoss Inc.\n17:57:32,764 INFO  [TransactionManagerService] Setting up property manager MBean and JMX layer\n17:57:37,070 INFO  [TransactionManagerService] Initializing recovery manager\n\nACTUALIZACIÓN: \nCambié a la perspectiva de depuración y observé que la depuración funcionaba, se veían los hilos, pero tras un tiempo se desconectaba, y era el proceso javaw el que marcaba error.\n\nRuta del workspace que dejó de funcionar:   \nC:\\Users\\ruslan.lopez\\Downloads\\Aplicaciones\\TODO-PAO\n\nRuta del workspace que funciona: \nC:\\Users\\ruslan.lopez\\Downloads\\Aplicaciones\\TODO-MPCCS\n\nBorrando el error log antes de correr me da dos errores sin Stack Trace.\n\nEn el segundo ni siquiera hay descripción del error\n\n¿Alguien tiene idea de cómo puedo hacer la depuración en estas condiciones?\nACTUALIZACION\nEspero que nadie haya tenido que pasar po la misma penosa situación que yo, todo en mi mente indica que es un eor propio de eclipse y no de configuración. Mi problema surgió cuando estando en modo depuración hubo un corte de corriente y se apagó el PC. Tuve que hacer algo tediosísimo que fue lanzar el sevidor en modo depuración y jugar con la opción de espera por conexiones y conectarme desde netbeans para realizar la depuración en netbeans( lo cual para ser honestos tuvo sus ventajas). Entiendo que la mayoría no contará con tanta RAM como yo en ese momento así que les sugiero en cuanto les sea posible reinstalar su IDE.\n\nA: Has tratado editando tu archivo messaging-service.xml\nPara evitar problemas con seguridad se debe especificar el valor del atributo SuckerPassword\n <!-- The password used by the message sucker connections to create connections.\n           THIS SHOULD ALWAYS BE CHANGED AT INSTALL TIME TO SECURE SYSTEM    -->\n<attribute name=\"SuckerPassword\">4cd5ab1456781b311<\/attribute>\n\n*Algo importante que acabo de recordar es que el valor debe estar encriptado.\n\nA: No sé si lo siguiente puede servir para solucionar el comportamiento anómalo de tu depurador, pero el mensaje de advertencia: \n\nWARN  [JBossASSecurityMetadataStore] WARNING! POTENTIAL SECURITY RISK. It has been detected that the MessageSucker component which sucks messages from one node to another has not had its password changed from the installation default. Please see the JBoss Messaging user guide for instructions on how to do this\n\nSe puede solucionar estableciendo una contraseña para el MessageSucker de la siguiente forma:\n\n\n*\n\n*En el archivo C:\\jboss-eap-5.1\\jboss-as\\server\\all\\deploy\\messaging\\messaging-jboss-beans.xml debe ir la contraseña\ndeseada en texto plano.\n\n*En el archivo C:\\jboss-eap-5.1\\jboss-as\\server\\all\\deploy\\messaging\\messaging-service.xml debe ir la misma contraseña pero encriptada, mediante la clase SecurityUtil de\nJBoss\nLa contraseña se encripta así:\nDesde la línea de comandos de Windows, ejecuta \"C:\\Program Files\\Java\\jdk1.6.0_27\\bin\\java.exe\" -cp C:\\jboss-eap-5.1\\jboss-as\\client\\jboss-messaging-client.jar org.jboss.messaging.util.SecurityUtil tu_password_plano. Como respuesta de la consola, debe aparecer al final lo siguiente \n\nEncoded Password: tu_password_encriptado\n\ny esa contraseña generada es la que debes copiar para usar como contraseña en messaging-service.xml\nEntonces lo que debes configurar en cada archivo xml es:\n\n\n*\n\n*messaging-jboss-beans.xml: \n<property name=\"suckerPassword\">tu_password_plano<\/property>\n\n*messaging-service.xml:\n<attribute name=\"SuckerPassword\">tu_password_encriptado<\/attribute>\nDespués de esto reinicia tu perfil de JBoss."}
{"text":"Q: Configuraciones específicas para matplotlib embebido en PyQt5 Tengo esta configuración actual:\ndef config_matplotlib(self):\n    self.fig = Figure((130.0, 6.0), dpi=70, facecolor=\"#F6F4F2\")\n    self.canvas = FigureCanvas(self.fig)\n    self.canvas.setParent(self.window.graphicsGroupBox)\n    self.window.graphicsGridLayout.addWidget(self.canvas)\n    self.graph_a = self.fig.add_subplot(311)\n    self.graph_b = self.fig.add_subplot(312)\n    self.graph_c = self.fig.add_subplot(313)\n\n    self.graph_a.grid(True)\n    self.graph_b.grid(True)\n    self.graph_c.grid(True)\n\n    self.graph_plot_a = self.graph_a.plot(\n                [],\n                linewidth=1,\n                color=(\"darkorange\"),\n                )[0]\n    self.graph_plot_b = self.graph_b.plot(\n                [],\n                linewidth=1,\n                color=(\"darkorange\"),\n                )[0]\n    self.graph_plot_c = self.graph_c.plot(\n                [],\n                linewidth=1,\n                color=(\"darkorange\"),\n                )[0]\n\n    ajust = {\"top\": 0.95,\n            \"bottom\": 0.1,\n            \"right\": 0.97,\n            \"left\": 0.05,\n            \"wspace\": 0.2,\n            \"hspace\": 0.2,}\n    self.fig.subplots_adjust(**ajust)\n\n    #graficar (lo que se ve cuando se ejecuta el programa por)\n    self.canvas.draw()\n\nDa como resultado lo siguiente:\n\nNecesito obtener una gráfica con los estilos de línea y los límites iguales a los que tengo aquí:\n\nHe revisado documentación y tutoriales y no encuentro cómo poner los estilos de línea, imprimir dos gráficos en un mismo plot, y adicionalmente meter texto, todo esto embebido, claro está, por que normalmente sé como se hace.\nQuiero tener la configuración inicial con los límites establecidos, y lo otros ponerlo en una función update_plot().\n\nA: *\n\n*Para los límites usa {tu gráfico}.axes.set_xlim([{desde}, {hasta}]) y {tu gráfico}.axes.set_ylim([{desde}, {hasta}]) para los limites\n\n*para colocar líneas discontinuas usa '--' en la función plot como parámetro. \n\n*Para plotear 2 gráficos usa {tu gráfico}.plot(data1, {argumentos para el primer gráfico}, data2, {argumentos para el segundo gráfico}, ...)\nEn la siguiente parte te muestro un ejemplo con tu función( he modificado algunas cosas por que no las encuentro declaradas en tu código)\nimport sys\nfrom PyQt5.QtWidgets import QApplication, QVBoxLayout, QWidget\nfrom matplotlib.backends.backend_qt5agg import FigureCanvas\nfrom matplotlib.figure import Figure\n\n\nclass Window(QWidget):\n    def __init__(self, parent=None):\n        super(Window, self).__init__(parent)\n        self.layout = QVBoxLayout()\n        self.setLayout(self.layout)\n        self.config_matplotlib()\n\n    def config_matplotlib(self):\n        self.fig = Figure((130.0, 6.0), dpi=70, facecolor=\"#F6F4F2\")\n\n        self.canvas = FigureCanvas(self.fig)\n        self.layout.addWidget(self.canvas)\n        self.graph_a = self.fig.add_subplot(311)\n        self.graph_b = self.fig.add_subplot(312)\n        self.graph_c = self.fig.add_subplot(313)\n\n        self.graph_a.grid(True)\n        self.graph_a.axes.set_xlim([1, 3])\n        self.graph_a.axes.set_ylim([0, 120])\n        data1 = [10*(x-1)**2 for x in range(1, 5)]\n        data2 = [-50 * (x - 4) for x in range(1, 5)]\n        self.graph_a.plot(data1, '--', data2, '--')\n\n        self.graph_b.grid(True)\n        self.graph_b.axes.set_xlim([1, 3])\n        self.graph_b.axes.set_ylim([0, 120])\n        self.graph_b.plot(data1, '--')\n\n        self.graph_c.grid(True)\n        self.graph_c.axes.set_xlim([1, 3])\n        self.graph_c.axes.set_ylim([0, 120])\n        self.graph_c.plot(data2, '--')\n\n        self.graph_plot_a = self.graph_a.plot(\n            [],\n            linewidth=1,\n            color=(\"darkorange\"),\n        )[0]\n        self.graph_plot_b = self.graph_b.plot(\n            [],\n            linewidth=1,\n            color=(\"darkorange\"),\n        )[0]\n        self.graph_plot_c = self.graph_c.plot(\n            [],\n            linewidth=1,\n            color=(\"darkorange\"),\n        )[0]\n\n        ajust = {\"top\": 0.95,\n                 \"bottom\": 0.1,\n                 \"right\": 0.97,\n                 \"left\": 0.05,\n                 \"wspace\": 0.2,\n                 \"hspace\": 0.2, }\n        self.fig.subplots_adjust(**ajust)\n\n        # graficar (lo que se ve cuando se ejecuta el programa por)\n        self.canvas.draw()\n\n\nif __name__ == '__main__':\n    app = QApplication(sys.argv)\n\n    main = Window()\n    main.show()\n\n    sys.exit(app.exec_())"}
{"text":"Q: Entendiendo la ausencia de punteros en Python En algunas aplicaciones sencillas que me ha tocado escribir en C\/C++ he visto la facilidad con la que se resuelven ciertas tareas utilizando punteros. Ahora, más interesado en otro lenguaje: Python, he notado la ausencia de este concepto. ¿A qué se debe esta ausencia? Siendo Python un lenguaje muy poderoso y utilizado, entonces, ¿qué concepto lo sustituye?, ¿está implícito en los tipos de datos, en las asignaciones, en la instanciación de una clase?\nUn ejemplo extremadamente sencillo sería que en C podemos codificar cosas como esta:\n#include <stdio.h>\n\nint main(void) {\n    \/\/ your code goes here\n    int a = 5;\n    int *b = &a;\n    printf(\"a = %d; b = %d\\n\", a, *b); \/\/ (1)\n\n    a = 6;\n    printf(\"a = %d; b = %d\\n\", a, *b); \/\/ (2)\n    return 0;\n}\n\n\n(1): a = 5; b = 5\n(2): a = 6; b = 6\n\nb apunta a la dirección de memoria de a, cualquier modificación en a podrá ser observada al desreferenciar b. Cualquier asignación por indirección *b = <valor>; modificará a.\nPero, en Python:\na = 5\nb = a\nprint \"a = {0:d}; b = {1:d}\".format(a,b) # (1)\nb is a # resultado: True\n\na = 6\nprint \"a = {0:d}; b = {1:d}\".format(a,b) # (2)\nb is a # resultado: False\n\n\n(1): a = 5; b = 5\n(2): a = 6; b = 5\n\nAl principio a y b hacen referencia al mismo objeto. Luego, cuando a es modificado se crea un nuevo objeto; entonces, ambos hacen referencia a objetos diferentes y de valores diferentes.\nNo hay una forma de hacer lo que en C en Python con este tipo de dato, pero es posible hacer algo similar con tipos de datos mutables; sin embargo, solo se puede cuando hacemos modificaciones internas del dato mutable, por ejemplo: cambiar el valor de un elemento de una lista.\na = [1, 2]\nb = a\n\nprint b is a # resultado: True\n\nb.append(3)\n\nprint b is a # resultado: True\n\na = [4, 5]\n\nprint b is a # resultado: False\n\n\nA: Su ausencia se debe a que el uso explícito de punteros es una característica de lenguajes de más bajo nivel como el C. Lenguajes de alto nivel como Python lo evitan con el propósito de hacer más fácil y ágil su utilización, así como no tener que conocer detalles del modelo de datos.\nQue el programador de Python no tenga que lidiar con los punteros no quiere decir que el intérprete no haga uso de ellos. De hecho los usa profusamente de forma implícita.\nEn Python todo es un objeto creado en la memoria dinámica (mantenida automáticamente). Cuando llamas a una función los argumentos son pasados mediante sus punteros. Es lo que se conoce como convención de llamada por objeto. De igual forma si asignas a = b, a lo que guarda es el puntero del objeto de b. Así que todas las variables son punteros a objetos, que son manejados implícitamente.\nLo que sí hay que diferenciar es entre objetos inmutables y mutables.\n\n\n*Inmutables son los números, las cadenas o las tuplas. Al asignar x = 2015 creará un objeto entero y x apuntará a él pero el contenido de ese objeto no podrá ser modificado. Si luego asignas x = 2016 lo que hará internamente será crear un nuevo objeto con el nuevo contenido.\n\n*Mutables son otros objetos como los diccionarios o las listas. En este caso dichos objetos sí podrán ser modificados. Si tienes v = [1] y luego llamas a v.append(2), v seguirá apuntando al mismo objeto, pero su contenido habrá cambiado.\n\nEn resumen, al ejecutar este código:\nx = 2015\ny = x\nx = 2016\n\nprint x\nprint y\n\nv = [1]\nw = v\nv.append(2)\n\nprint v\nprint w\n\nEl resultado será:\n2016\n2015\n[1, 2]\n[1, 2]\n\n\nA: En C, los punteros suelen satisfacer tres necesidades: referenciar estructuras reservadas dinámicamente, pasar parámetros a una función por referencia, o iterar una colección.\nEn el caso de Python, y los lenguajes de objetos con memoria automática en general, las variables cumplen la función de referenciar estructuras creadas dinámicamente: uno puede crear instancias de los objetos en cualquier momento.\nEn general, los objetos de reservan en la memoria dinámica de los procesos, y las variables son referencias a ellos: casi casi que las referencias son abstracciones de los punteros, con algunas propiedades más.\nPor este motivo, el pasaje de parámetros se hace siempre por referencia, por lo que no se necesitan punteros para esto.\nPor último, en los lenguajes de objetos existen objetos iteradores, que exponen una interfaz de más alto nivel para recorrer colecciones de datos.\nAbstraerse de los detalles de la memoria del proceso es algo buscado en los lenguajes, y por todo esto es que no son necesarios los punteros: por diseño.\n\nA: La respuesta de @GuillermoRuiz me parece excelente, pero querría profundizar en algunos detalles sobre la mutabilidad e inmutabilidad, que suelen confundir al principio, pero que están muy claros si se tiene presente que todo son punteros.\nCambiar elementos de una lista\nEl hecho de que una lista sea \"mutable\" implica no sólo que podemos añadir elementos a ella, sino que podemos cambiar los valores guardados.\nEn realidad, siendo puristas, la lista lo único que contiene son \"punteros\" a los datos en cuestión. Es decir, una lista como esta:\na = [1, 2, 3]\n\nContiene en realidad tres punteros, cada uno apuntando a un entero, de valores respectivos 1, 2 y 3. Si ahora cambiamos el primer elemento:\na[0] = 100\n\nAl imprimir la lista veremos:\n>>> a\n[100, 2, 3]\n\nEsto no quiere decir que el primer elemento de la lista haya sido sustituido por un 100 (eso sería cierto en un array C), sino que se ha creado un nuevo objeto de tipo entero y que el puntero que había en el primer elemento de la lista que apuntaba a un 1, ahora apunta al 100. El 1 previo queda \"sin referencias\" y será eliminado de memoria más adelante por el recolector de basura.\nCopias de listas\nPor otro lado, el hecho de que las variables sean en realidad punteros (o si prefieres, referencias) implica que la siguiente asignación:\nb = a\n\nno copia los elementos de a, sino que simplemente asigna a b una copia del puntero. a. Es decir, a y b apuntan en realidad a la misma lista. Por tanto si hacemos:\nb[0] = 50\n\nes lo mismo que si hubiéramos hecho a[0] = 50.\nPara comprobar si dos variables \"apuntan\" a un mismo dato, Python ofrece el comparador is:\n>>> a is b\nTrue\n\nSi no queremos que apunten al mismo, sino que sean una copia (en lugares diferentes de la memoria), podemos lograrlo así:\nb = list(a)\n\no así:\nb = a[:]\n\nEn cualquiera de estos dos casos:\n>>> a is b\nFalse\n>>> a == b\nTrue\n\nEl operador == compara los elementos de a con los de b, mientras que is compara la identidad de a con la de b, lo que en la práctica consiste en comparar a qué dirección de memoria se refiere cada uno.\nListas como parámetros\nLo anterior explica también por qué una función puede modificar elementos de una lista que reciba como parámetro:\ndef pon_cero(lista):\n   lista[0] = 0\n\na = [1,2,3]\npon_cero(a)\nprint(a)\n# [0, 2, 3]\n\nEn una tupla, al ser inmutable, esto no puede hacerse. \nInmutabilidad, pero no tanto\nPero cuidado, el que una tupla sea inmutable sólo significa que no se puede cambiar el valor de tupla[i] por otro valor, pero si tupla[i] fuese una lista, los valores de esa lista sí podrían cambiarse:\ntupla = ( [0,0], [1,1] )\n# tupla[0] = [2,2] # No está permitido. Error\ntupla[0][0] = 2\ntupla[0][1] = 2    # No hay problema aqui en cambio\nprint(tupla)\n([2,2], [1,1])\n\n\nA: Es un poco chapuza, pero si realmente necesitas 1 variable y un \"puntero\" puedes hacer:\nclass mutable_obj:\n    def __init__(self, x):\n        self.x = x\n\na = mutable_obj(10)\nb = a\na.x == b.x # True\na.x = 30\na.x == b.x # True\nb.x = 86\na.x == b.x # True\n\nCreo que es innecesario, igualmente si alguien sabe una mejor manera ¡que lo diga! :D"}
{"text":"Q: Pattern matcher para formatear números de teléfono españoles Tengo una lista para números de teléfono móvil validados que debo mostrar de una misma manera:\nEl formato deseado es: +34 666 111 222\n\nString telefonos = \n            \"666444555,\n             666-444-555,\n             666 44 45 55,\n             666-44-45-55,\n             +34666555444,\n             0034666555444\";\n\nPattern pattern = Pattern.compile(\"\"); \/\/ aqui es donde me clavo.\nMatcher matcher = pattern.matcher(telefonos);\n\nwhile (matcher.find())\n    System.out.println(matcher.group());\n\nSalida esperada:\n+34 666 444 555\n+34 666 444 555\n+34 666 444 555\n+34 666 444 555\n+34 666 555 444\n+34 666 555 444\n\n\nA: Prueba la siguiente expresión regular:\n^(0034|\\+34)?(\\d\\d\\d)-? ?(\\d\\d)-? ?(\\d)-? ?(\\d)-? ?(\\d\\d)$\n\n\nSi planeas utilizar esta expresión de manera frecuente, es recomendable utilizar una constante para evitar recompilar la expresión cada vez, es decir:\nprivate static final Pattern REGEX_PATTERN = \n        Pattern.compile(\"^(0034|\\\\+34)?(\\\\d\\\\d\\\\d)-? ?(\\\\d\\\\d)-? ?(\\\\d)-? ?(\\\\d)-? ?(\\\\d\\\\d)$\", Pattern.MULTILINE);\n\npublic static void main(String[] args) {\n    String input = \"666444555\\n666-444-555\\n666 44 45 55\\n666-44-45-55\\n+34666555444\\n0034666555444\";\n\n    System.out.println(\n        REGEX_PATTERN.matcher(input).replaceAll(\"+34 $2 $3$4 $5$6\")\n    );  \n}\n\nSalida:\n+34 666 444 555\n+34 666 444 555\n+34 666 444 555\n+34 666 444 555\n+34 666 555 444\n+34 666 555 444\n\n\nA: Lo mismo que en la otra pregunta, te recomiendo usar libphonenumber (la librería de Google para validar números telefónicos). Tiene muchas ventajas comparado con hacer tu propia implementación, por ejemplo que no tienes que mantenerlo tú y que te da el número en formato internacional, no importando cómo lo ingrese el usuario.\nUn ejemplo de cómo se usa es:\nString number = \"666444555\"\nPhoneNumberUtil phoneUtil = PhoneNumberUtil.getInstance();\ntry {\n  PhoneNumber number = phoneUtil.parse(number, \"ES\");\n} catch (NumberParseException e) {\n  System.err.println(\"NumberParseException was thrown: \" + e.toString());\n}\n\nAhora hay una serie de métodos pero el más importante sería:\nboolean isValid = phoneUtil.isValidNumber(number); \/\/ retorna true\n\nAcá siempre vas a poder tener el formato internacional que deseas:\nSystem.out.println(phoneUtil.format(number, PhoneNumberFormat.INTERNATIONAL));\n\nPor supuesto, recomiendo siempre que hagas la pregunta de si es válido o no el número antes de preguntar por su formato internacional.\nPara ver un demo puedes ir acá."}
{"text":"Q: ¿Por qué dos números que son distintos se evalúan como iguales en Javascript? \nPregunta Original: Why are two different numbers equal in JavaScript?\n\nEstuve jugando un poco con la consola y se me ocurrió probar lo siguiente:\n\n\nvar num1 = 0x100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;\nvar num2 =  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\nconsole.log(num1 == num2)\n\n\nY me sorprendió que realmente esta comparación se evalúa como verdadera (pueden probarla en consola).\n¿Por qué pasa esto? Está claro que son números diferentes (el segundo tiene un dígito menos que el primero; si llego a agregar una F al segundo o un 0 al primero la comparación ya es falsa, pero mientras tanto, es verdadera).\n\nA: Todos los números en JavaScript se representan internamente como números de punto flotante de precisión doble (ver §4.3.19 en la especificación), Esto quiere decir que uno puede representar exactamente cualquier número entre 0 y 9007199254740992 (hexadecimal 0x20000000000000, o lo que es lo mismo 2^53). Lo mismo ocurre para los números negativos: van de 0 a -9007199254740992. Si uno prueba agregar 1 (o restar 1 para los negativos) se da cuenta de que el número que queda es el mismo, pero si uno intenta agregar 2 se da cuenta de que el número cambia. Esto es por cómo es la mantisa en el estándar IEEE754. \nObserve:\n\n\nconsole.log(9007199254740992 === 9007199254740993)\n\n\nAgregando otra F al segundo número (cuando lo representaste en hexa, estás cambiando no solo la mantisa sino también el exponente (el número es 4 órdenes mayor al otro), y por esto sí evalúa distinto.\n\na partir de la vesion de ECMAScript 2015 se incluyo una constante para obtener el número mas\n  grande seguro*\n  Number.MAX_SAFE_INTEGER, ademas de Number.isSafeInteger()\n\n\nA: No se necesitan tantos '0's y 'F's. En realidad la igualdad comienza con solo 14 '0's y 'F's incluso con el operador ===\n0x100000000000000 === 0xFFFFFFFFFFFFFF\n\nLa explicación es simple, en realidad esos dos números son iguales y por lo tanto la comparación es correcta de la misma manera que la siguiente igualdad también produce true\n1 === 1.0\n\nSimplemente son dos formas diferentes de expresar el mismo número.\nAmbas representaciones hexadecimales evalúan al mismo número lo cual puede ser demostrado simplemente ejecutando en consola.\n0x100000000000000\n0xFFFFFFFFFFFFFF\n\nLo cual evalúa ambos a:\n72057594037927940\n72057594037927940\n\nEn el caso de la versión con muchos '0's o 'F's ambas expresiones evalúan al sgte número:\n1.3407807929942597e+154\n\n\nA: Cuando representas cualquier Número de punto flotante con doble precisión IEEE754 internamente se tiene algo como:\n0111 1111 1111 2222\n2222 2222 2222 2222\n2222 2222 2222 2222\n2222 2222 2222 2222\n\nDonde (0) es bit de signo (0=positivo, 1=negativo), (1) los bits de exponente, y (2) los bits de matisa.\nSi en JavaScript comparas 0.5 == 5 * 0.1 vas a obtener true incluso cuando esa operación tiene la imprecisión característica de los puntos flotantes (es decir: algo de error vas a tener). Muchos lenguajes (JavaScript entre ellos) toleran un cierto error en el último bit de una comparación en la mantisa (claro, a mismo exponente y mismo signo).\nLo normal es que el esquema de punto flotante guarda el exponente como un número entre 1024 y -1023 (o al menos así debe entenderse), mientras que la mantisa debe entenderse como un número entre 0 y 0.111111... para dar un número como 0.1b * 2 ^ 12 lo que equivale a calcular 0.5 * 4096 en base decimal. La mantisa, en este sentido, siempre va a ser menor a 1 y se va a guardar de tal forma que el primer dígito (en base binaria) es un 1. Para que esto ocurra, se hace un proceso llamado normalización en el cual corremos el exponente tantos números necesarios como \"comas\" queramos mover en el número hasta poder armar una mantisa cuyo primer dígito fraccionario en binario sea un 1 (lo cual algunas veces no se puede hacer, y se refleja eso viendo que el exponente, en binario, es 000 0000 0000 y no se puede \"bajar\" más). En este sentido, siempre que el exponente no sea 000 0000 0000 el número se habrá normalizado para que la mantisa empiece con 0.1 (binario) y, en este sentido, es redundante (ineficiente) almacenar ese 1 (el 0 antes del punto nunca se almacena). Por lo tanto, nuestra mantisa siempre nos permitirá guardar en dígito más y, por esto, podemos llegar a representar 2^53 exactamente (en lugar de 2^52 por tener 52 dígitos en la mantisa).\nVeamos ahora que el número 0xFF... tiene 13 letras F o, en binario, 52 bits de longitud. Así nomás se nos ocurre que el número podría guardarse como (positivo)(+52)(1111... 52 \"unos\") pero en realidad por este \"corrimiento\" del 1 que viene \"implícito\", el primer 1 no se guarda. El número pasa a guardarse como (haciendo el corrimiento para el exponente en binario, por supuesto):\n0100 0011 0010 1111\n1111 1111 1111 1111\n1111 1111 1111 1111\n1111 1111 1111 1110\n\n(el exponente 1075 es, en realidad, el 52, pero sumado el límite para los exponentes negativos, que es 1023)\n\nEl otro número es un uno seguido de 52 ceros. Normalmente sería: (positivo)(+53)(10000... en total 51 \"ceros\"). Nuevamente como la mantisa empieza con 0.1 (porque podemos normalizar estos números) nos ahorramos el primer uno.\n0100 0011 0100 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n\n(el exponente 1076 en realidad es 53, por el mismo motivo)\n\nAhora hay que comparar los números en igualdad de condiciones. Primero nos aseguramos de que, de hecho, el signo y el exponente sean el mismo. La ALU directamente hace esto, corriendo al mismo tiempo índices y mantisas. Luego, compara las mantisas y ve si son iguales.\nEntonces la mantisa de 100000... y 011111... (con los respectivos unos implicitos) van a \"parecerse\" y tener ese pequeño \"epsilon\" de diferencia, por lo que van a poder compararse como iguales.\nNota acerca de la mantisa y la representación en punto flotante: Conceptualmente la mantisa es siempre menor a 1. Si se quiere representar un número mayor, se debe concebir usando exponentes. Ejemplos:\n\n\n*0.5 se representa como 0.5 * 2 ^ 0 (considerando el orden correcto de precedencia de los operadores en matemáticas).\n\n*1 no se representa como 1 * 2 ^ 0 ya que la mantisa es estrictamente menor a 1, por lo que debe representarse como 0.5 * 2 ^ 1.\n\n*65, que en representación binaria es 1000001, será guardado como (65\/128) * 2 ^ 7.\n\nEstos números se representarán de la siguiente manera (se debe recordar: como los números son normalizables, el primer \"1\" es implícito):\n0011 1111 1111 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n\n(el exponente 1023 corresponde a 0, con una mantisa con valor 0.1 siendo el 1 implícito).\n\n0100 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n\n(el exponente 1024 corresponde a 1, con una mantisa con valor 0.1 siendo el primer 1 implícito).\n\ny\n0100 0000 0110 0000\n0100 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000    \n\n(el exponente 1030 corresponde a 7, con una mantisa que en binario se expresaría 0.1000001, y como el primer 1 es implícito, se guarda como 0000 0100 0000...)\n\nNota Acerca de los exponentes: Una precisión de más posiciones decimales puede lograrse usando exponentes negativos (entre -1 y -1023): Los exponentes pueden verse como si fueran números positivos, pero en realidad tienen un \"desplazamiento\" (llamado bias, originalmente) de 1023 (esto quiere decir que el exponente que parece 000 0000 0001 en realidad corresponde a 2^(-1022)). Traduciendolo a potencias en base 10, el menor exponente posible es -308 (considerando también dónde queda la mantisa, porque el número es uno no normalizado). El menor número positivo resulta ser:\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0001\n\nque es: (1 * 2^-52) * 2^-1023 dado el -52 por la mantisa (que recien tiene un 1 al final) y el -1023 por el exponente. El último uno resulta en la posición: 1 * 2^(-1075), que se aproxima al dichoso 10 ^ -308.\nEl exponente más bajo es 000 0000 0000 correspondiente a (-1023). Sin embargo en este valor las mantisas no tienen implícito el primer 1. Por otro lado, aunque el exponente más grande se puede representar como 111 1111 1111, en realidad no se usa como exponente sino para representar pseudonúmeros de punto flotante comunes:\n0111 1111 1111 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n\ncorresponde a +Infinity, mientras:\n1111 1111 1111 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n\ncorresesponde a -Infinity, y cualquier patrón con una mantisa distinta de 0, como:\n?111 1111 1111 0000\n0000 0000 0000 0000\n0000 0000 0000 0000\n0000 0000 0000 0001\n\ncorresponde to NaN (not a number; representación ideal para resultados que no pueden dar números, como log(-1) o 0\/0). El primer bit (el de signo) es irrelevante en estos casos."}
{"text":"Q: Agregar fotos en galería de edición en Google Play Newsstand Me gustaría agregar varias imágenes en una galería dentro de un articulo en Google Play Newsstand, he tratado de agregar por ejemplo 3 imágenes con la medida permitida, pero no pueden ser desplegadas como galería.\n< url=\"[URL IMAGE]\"\n        type=\"image\/png\" expression=\"full\" width=\"538\" height=\"190\">< type=\"plain\">[DESCRIPTION]<\/>\n< role=\"author\" scheme=\"\">[AUTHOR]<\/><\/>\n\nEste es un ejemplo de mi elemento artículo:\n    <item>\n    <title><![CDATA[Arquean a cafetería]]><\/title>\n    <link><![CDATA[]]><\/link>\n    <><![CDATA[Today we're introducing a new age-based rating system for apps and games on Google Play. We know that people in different countries have different ideas about what content is appropriate for kids, teens and adults, so today's announcement will help developers better label their apps for the right audience. Consistent with industry best practices, this change will give developers an easy way to communicate familiar and locally relevant content ratings to their users and help improve app discovery and engagement by letting people choose content that is right for them.]]><\/>\n    <author>Grupo Jorgesys<\/author>\n    < url=\"\"\n    type=\"image\/png\" expression=\"full\" width=\"538\" height=\"190\">< type=\"plain\"><![CDATA[Android]]><\/>< role=\"author\" scheme=\"\"><![CDATA[Grupo Jorgesys  \/ Staff]]><\/><\/>\n    < url=\"\" medium=\"audio\"><><![CDATA[Arquean a cafetería]]><\/><><![CDATA[Arquean a cafetería]]><\/><\/>\n\n    < url=\"\"\n    type=\"image\/png\" expression=\"full\" width=\"538\" height=\"190\">< type=\"plain\"><![CDATA[Android0]]><\/>< role=\"author\" scheme=\"\"><![CDATA[Grupo Jorgesys  \/ Staff]]><\/><\/>\n\n    < url=\"\"\n    type=\"image\/png\" expression=\"full\" width=\"538\" height=\"190\">< type=\"plain\"><![CDATA[Android1]]><\/>< role=\"author\" scheme=\"\"><![CDATA[Grupo Jorgesys  \/ Staff]]><\/><\/>\n\n    < url=\"\"\n    type=\"image\/png\" expression=\"full\" width=\"538\" height=\"190\">< type=\"plain\"><![CDATA[Android2]]><\/>< role=\"author\" scheme=\"\"><![CDATA[Grupo Jorgesys  \/ Staff]]><\/><\/>\n\n    < url=\"\"\n    type=\"image\/png\" expression=\"full\" width=\"538\" height=\"190\">< type=\"plain\"><![CDATA[Arquean a cafetería]]><\/>< role=\"author\" scheme=\"\"><![CDATA[Grupo Jorgesys  \/ Staff]]><\/><\/>\n\n    <\/item>\n\n\nA: Bien pues gracias a la ayuda de @AngelAngel, encontré la respuesta, las imágenes definidas originalmente dentro del archivo .rss tenían una dimensión de ancho 538 pixeles por 190 pixeles de altura, una medida que no podía ser desplegada en la galería. Ahora he generado imágenes de 800px de ancho por 400 pixeles de alto, las imágenes por fin son desplegadas correctamente mediante este .rss.\nLas características de las imágenes en una edición Google Newsstand son:\n\nImágenes en pantalla dentro del cuerpo del artículo y galería: Los usuarios quieren ver hermosas y grandes imágenes. El lado más corto de\n  una imagen debe ser 800px, o mayor para una mejor visualización.**"}
{"text":"Q: ¿Cómo mostrar una vista sin el layout de la aplicación? ¿Cómo se hace para mostrar una Vista (view) de Rails sin mostrar el layout de la aplicación para un usuario registrado y otro layout para un visitante? ¿Se puede?\n\nA: Podes cambiar el layout para un controlador o una acción del controlador, una manera de mostrar una vista con otro layout cuando el usuario no esta registrado seria así:\nclass MyController < ApplicationController\n\n  def my_action\n    if current_user.nil?\n      render layout: \"new_user_layout\"\n    else\n      render layout: \"member_layout\"\n    end\n  end\n\nend\n\nPara cambiar el layout de todos los controladores que heredan de ApplicationController seria lo siguiente:\nclass ApplicationController < ActionController::Base\n  layout :users_layout\n\n  private\n    def users_layout\n      current_user.nil? ? \"new_user_layout\" : \"member_layout\"\n    end\n\nend \n\nEn las guias de rails podes encontrar más información sobre layouts.\n\nA: este codigo es sino te gustaria usar ningun layout\n class MyController < ApplicationController\n\n      def my_action\n        #solo debes poner en modo false para  que lo desabilites solo para este metodo\n         render layout: false\n      end\n\n    end\n\no tmb puede ser\nclass MyController < ApplicationController\nlayout: false\n  def my_action\n\n  end\n\nend"}
